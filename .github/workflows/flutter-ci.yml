name: Flutter CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  FLUTTER_CHANNEL: "stable"

permissions:
  contents: read
  packages: write

jobs:
  setup-and-test:
    name: Analyze → Test → Coverage → Build
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache pub packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.pub-cache/git
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'

      - name: Flutter --version
        run: flutter --version

      - name: Install dependencies
        run: flutter pub get

      - name: Static code format check
        run: |
          echo "=> Checking dart formatting..."
          flutter format --set-exit-if-changed .

      - name: Static analysis (lint)
        run: |
          echo "=> Running flutter analyze..."
          flutter analyze
        # Make analyze fail the job on issues (configure analysis_options.yaml to control severity)

      - name: Run unit & widget tests (with coverage)
        run: |
          echo "=> Running tests with coverage..."
          flutter test --coverage

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/lcov.info

      - name: Build Android release APK
        run: |
          echo "=> Building release APK (no signing - debug/test artifact)..."
          flutter build apk --release --no-tree-shake-icons
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  optional-codecov:
    name: Upload coverage to Codecov (optional)
    runs-on: ubuntu-latest
    needs: setup-and-test
    if: always() # run even when tests fail (so you can inspect)
    steps:
      - uses: actions/checkout@v4
      - name: Download coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage
          path: coverage
      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage/lcov.info
        #   token: ${{ secrets.CODECOV_TOKEN }} # optional; public repos can skip token

  badge-and-metrics:
    name: Quality Gates & Metrics
    runs-on: ubuntu-latest
    needs: setup-and-test
    steps:
      - name: Echo metrics (example)
        run: |
          echo "CI run finished. Add your metric collectors here (Codecov, SonarCloud, etc.)."
